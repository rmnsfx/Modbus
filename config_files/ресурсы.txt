0. Raspbian, Armbian (with Win32DiskImager)

1. sudo pip install Django
2. sudo apt-get install Nginx
3. sudo apt-get install uWSGI
4. sudo apt-get install Postgresql
5. sudo apt-get install Python-pip, Python3-pip
6. sudo pip install minimalmodbus
7. sudo apt-get install python-daemon
8. sudo apt-get install OpenVPN

9. sudo apt-get install python-psycopg2 (postgresql)
10. sudo apt-get install libpq-dev (postgresql)
11. sudo apt-get install uwsgi-plugin-python (для uwsgi)
12. usb-modeswitch usb-modeswitch-data или AT^U2DIAG=0 -> OK (установить режим "модем", putty->serial)
*13. sudo apt-get install wvdial (для 3g модема), wvdialconf (`/etc/wvdial.conf') (https://www.opennet.ru/tips/info/2609.shtml)
*14. sudo apt-get install python-psutil (проверка запущен ли процесс)

15. sudo apt-get install supervisor
16. sudo apt-get install ntp ntpdate (ntp-server синхронизация времени)
17. sudo apt-get install htop
18. sudo apt-get install python-pandas
19. sudo pip install sqlalchemy
20. sudo pip install pyusb
21. sudo apt-get install gammu python-gammu gammu-smsd
*22. sudo apt-get install watchdog

*23. sudo apt-get install libdbi-perl
*24. sudo apt-get install libdbd-pg-perl
*25. sudo apt-get install postgresql-contrib

-------------------------------------------------------------------------------------------

sudo raspi-config
Enable SSH,I2C 
Serial disable "login shell to be access over serial".

-------------------------------------------------------------------------------------------

sudo -u postgres psql
CREATE DATABASE client;
CREATE USER roman WITH password '1234';
GRANT ALL privileges ON DATABASE client TO roman;

sudo /etc/init.d/postgresql start

#размер бд
select pg_database_size('client');
SELECT pg_size_pretty( pg_database_size( 'client' ) );


#Настройка антиблоатера
ALTER USER roman WITH SUPERUSER;
/connect client;
CREATE EXTENSION pgstattuple;



-------------------------------------------------------------------------------------------

sudo dpkg-reconfigure tzdata
sudo ntpdate -bs ntp.remco.org

-------------------------------------------------------------------------------------------

#реквизиты usb устройства
lsusb -v 

или 

udevadm info --query=all -a -n /dev/ttyUSB0

sudo udevadm control --reload
udevadm control --reload-rules

udevadm test /dev/ttyUSB3

-------------------------------------------------------------------------------------------

#GAMMU

sudo gammu-smsd-inject TEXT +79194622246 -text "Text message 3"
sudo /etc/init.d/gammu-smsd restart 
sudo gammu-smsd-monitor 

-------------------------------------------------------------------------------------------

#Автозагрузка

/etc/rc.local
/etc/init.d
update-rc.d

-------------------------------------------------------------------------------------------

#Отключить OOM Killer

sudo sysctl -w vm.overcommit_memory=2

-------------------------------------------------------------------------------------------

#Файл подкачки: swap-файл

sudo dd if=/dev/zero of=/swapfile bs=1M count=500
sudo mkswap /swapfile
sudo swapon /swapfile
записать /swapfile none swap sw 0 0 в /etc/fstab

-------------------------------------------------------------------------------------------

#Информация  о модулях ядра
lsmod

#Информация о модуле
modinfo ch341

-------------------------------------------------------------------------------------------

#RTC модуль ds3231 (часы)

1. Connect the module to GPIO pins 1..9

2. Power up the Pi

3. sudo raspi-config
Go to "9 Advanced Options" / "A7 I2C" and enable it including the module load etc

4. Reboot

5. Follow instructions here:
The Correct way to add an RTC :
- sudo nano /boot/config.txt
Add line:
dtoverlay=i2c-rtc,ds3231

- sudo nano /lib/udev/hwclock-set
Comment out lines:
#if [ -e /run/systemd/system ] ; then
# exit 0
#fi

- sudo reboot

- Check that the RTC module is on line:
sudo hwclock -r
This will display a time that is probably several years off...

6. Set RTC to current system time

date
This should display the current system time from the network
If this time is OK then:
sudo hwclock -w
Now the system time is written to the RTC and will be working in case there is no network.

-------------------------------------------------------------------------------------------

#Проверка частоты тактирования CPU
cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq

#Проверка частоты тактирования UART
vcgencmd measure_clock uart



#smstools (make, make install)
#запуск smstools
#sudo /etc/init.d/sms3 restart
#отправка смс
#sendsms 9194622246 'проверка'
